import React, {Component} from 'react';
import './Color.scss';
import hexToRgba from 'hex-to-rgba';

class Color extends Component {
  constructor (props) {
    super (props)
    this.state = {

    }
  }

  render () {
    const RGBA = hexToRgba(this.props.hexCode, .5)
    const colorPalette = {
      backgroundColor: this.props.hexCode,
      webkitBoxShadow: `9px 17px 5px -4px ${RGBA}`,
      mozBoxShadow: `9px 17px 5px -4px ${RGBA}`,
      boxShadow: `9px 17px 5px -4px ${RGBA}`,
    }
    return (
      <div className='Color' style={colorPalette}>
        {/* <svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="200px" height="200px" viewBox="0 0 433.000000 493.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,493.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none"><path fill={this.props.hexCode} d="M1969 4893 c-20 -33 -24 -34 -58 -26 -20 4 -66 8 -102 8 -53 0 -76-6 -120 -30 -47 -25 -65 -29 -139 -30 -111 -1 -161 -19 -224 -75 -51 -47 -51-47 -112 -42 -57 4 -62 2 -92 -28 -18 -17 -32 -38 -32 -47 0 -12 -7 -14 -34-9 -46 9 -93 -12 -133 -57 -21 -24 -51 -43 -86 -55 -71 -24 -159 -77 -211-127 -60 -58 -167 -204 -204 -279 -17 -35 -58 -93 -91 -129 -62 -68 -86 -121-78 -165 4 -21 -4 -37 -35 -74 -47 -57 -100 -195 -129 -338 -10 -52 -24 -118-30 -147 -14 -65 -5 -114 28 -153 14 -17 24 -32 22 -33 -2 -2 -17 -7 -34 -13-30 -10 -30 -11 -31 -84 -1 -53 -8 -92 -24 -133 l-24 -59 17 -126 c16 -126 17-128 98 -292 100 -202 128 -282 136 -384 l6 -79 75 -101 c121 -163 153 -197 232 -248 81 -53 140 -105 140 -123 0 -7 23 -44 50 -83 54 -77 139 -154 219 -198 54 -29 88 -75 242 -323 35 -57 81 -120 101 -139 32 -30 35 -38 26 -58 -17 -36 -1 -71 46 -103 51 -36 106 -96 106 -117 0 -30 56 -74 94 -74 33 0 35 -2 41 -37 9 -59 28 -88 56 -87 14 1 30 -7 39 -20 35 -51 105 -117 143 -135 91 -43 451 -52 593 -15 83 21 122 50 262 191 248 252 265 278 367 573 87 250 95 264 175 315 107 68 149 87 213 93 58 5 64 8 166 94 58 49 136 109 174 134 73 51 82 72 46 110 l-21 23 43 21 c105 53 154 118 147 194 -3 34 0 44 22 63 47 39 110 192 110 269 0 17 15 65 34 105 19 41 40 97 46 124 7 28 21 76 31 108 20 60 18 97 -7 118 -20 17 -17 43 12 101 57 112 63 245 28 614 -19 209 -40 279 -145 499 -99 208 -121 242 -182 286 -29 21 -45 43 -56 76 -13 39 -25 52 -64 75 -26 15 -81 57 -121 92 -76 66 -111 88 -157 99 -15 4 -98 57 -185 118 -88 61 -179 120 -204 131 -25 12 -128 60 -230 109 -194 93 -257 112 -400 124 -53 4 -99 14 -124 27 l-40 20 -21 -24 -21 -24 -43 23 c-49 25 -92 28 -189 13 -41 -7 -75 -7 -97 -1 -33 9 -36 7 -56 -26z m-502 -1585 c6 -13 8 -37 6 -53 -5 -36 12 -54 76 -78 54 -20 81 -10 81 33 0 21 -9 36 -30 52 -40 29 -38 44 6 53 33 6 39 3 66 -29 41 -50 73 -48 126 6 23 23 43 40 45 37 1 -2 18 -53 36 -114 41 -138 54 -161 115 -198 l49 -31 22 28 c26 32 18 35 152 -46 82 -48 82 -49 93 -103 6 -30 14 -55 18 -55 17 0 162 52 162 58 0 4 -11 24 -25 45 -30 43 -35 42 99 27 55 -7 102 -18 120 -30 35 -21 92 -78 85 -84 -8 -7 -170 -56 -186 -56 -9 0 -43 -7 -74 -16 -74 -21 -134 -71 -150 -125 -7 -21 -15 -39 -18 -39 -3 0 -15 17 -26 37 -11 20 -24 37 -30 37 -5 1 -20 -14 -32 -33 -28 -41 -30 -100 -5 -131 15 -19 17 -33 10 -113 -4 -51 -12 -110 -17 -132 -5 -22 -13 -67 -16 -100 -9 -74 5 -90 74 -89 40 1 184 25 233 40 10 3 25 30 37 67 l21 61 -30 24 c-41 32 -63 76 -55 113 7 33 21 35 95 18 57 -13 85 -5 119 32 l27 29 74 -30 c92 -38 104 -38 95 -3 -9 39 -23 53 -54 53 -14 1 -60 14 -101 31 -88 35 -165 46 -210 30 -28 -9 -38 -8 -67 10 -55 34 -41 53 42 57 117 5 370 -15 403 -32 44 -23 57 -62 42 -129 -17 -75 -8 -88 105 -142 108 -51 131 -79 122 -147 -4 -28 1 -54 18 -92 54 -122 56 -229 9 -428 -35 -148 -38 -153 -59 -87 -10 30 -21 58 -26 63 -7 8 -22 -37 -64 -189 -13 -48 -27 -70 -66 -107 -27 -27 -54 -48 -60 -48 -13 0 -5 66 18 150 20 74 6 126 -51 189 -23 25 -72 84 -108 131 -101 130 -213 246 -261 269 -50 24 -94 27 -141 7 -64 -27 -87 -70 -70 -133 6 -22 7 -22 38 -7 17 9 45 27 63 40 l32 24 26 -34 c32 -42 87 -168 77 -178 -4 -4 -38 -8 -77 -9 l-70 -2 2 36 c1 21 -2 37 -7 37 -5 0 -58 -22 -117 -50 -142 -65 -187 -70 -316 -36 -133 35 -157 34 -121 -5 16 -17 14 -21 -32 -63 l-49 -45 -102 -1 c-57 0 -103 3 -103 8 0 4 20 41 43 82 28 47 49 74 58 71 8 -2 21 -5 30 -8 13 -4 19 17 36 119 12 68 19 125 18 126 -9 10 -217 -130 -265 -178 -60 -60 -120 -166 -164 -289 l-27 -74 31 -103 c37 -121 37 -167 0 -173 -19 -2 -34 8 -66 45 l-42 48 -7 -47 c-9 -56 -19 -65 -47 -40 -62 56 -128 222 -164 412 -19 100 -21 264 -4 336 6 28 15 129 20 225 5 96 16 213 25 260 9 47 20 153 25 235 6 114 15 172 35 240 15 49 30 116 33 148 l7 59 140 123 c77 68 145 124 151 124 6 1 15 -9 21 -21z m2097 -1327 c11 -68 -18 -109 -88 -125 l-28 -7 35 63 c19 35 40 73 46 86 17 32 28 27 35 -17z m-2679 -277 c66 -57 75 -76 39 -82 -42 -6 -146 100 -128 130 10 15 23 8 89 -48z m993 -336 c7 -7 12 -30 12 -53 0 -46 -13 -65 -47 -65 -16 0 -24 7 -29 25 -5 19 -11 24 -24 20 -24 -8 -44 19 -36 51 6 23 11 26 36 20 17 -3 30 -1 30 4 0 14 44 12 58 -2z m100 0 c7 -7 12 -35 12 -63 0 -56 -12 -75 -47 -75 -27 0 -43 27 -43 75 0 20 5 45 10 56 12 21 50 25 68 7z m116 -14 c10 -10 16 -33 16 -64 0 -42 -4 -52 -25 -66 -23 -15 -27 -15 -50 0 -21 14 -25 24 -25 66 0 71 44 105 84 64z m158 -1 c23 -20 24 -85 2 -107 -18 -19 -55 -21 -72 -4 -7 7 -12 33 -12 58 0 25 5 51 12 58 17 17 48 15 70 -5z m128 3 c26 -32 -7 -87 -44 -73 -16 6 -23 66 -9 80 11 12 40 8 53 -7z m-630 -110 c183 -54 284 -70 447 -70 l142 0 -20 -39 c-44 -85 -161 -177 -226 -177 -20 0 -23 -5 -23 -39 0 -21 3 -60 7 -86 l6 -48 27 33 27 33 17 -76 c10 -42 16 -92 14 -112 l-3 -35 -59 36 c-46 28 -61 32 -68 22 -18 -26 -36 -74 -43 -115 -4 -24 -10 -43 -13 -42 -4 0 -21 19 -37 42 -17 23 -40 43 -51 45 -13 2 -42 -13 -72 -38 l-52 -40 0 65 c0 38 -4 65 -10 65 -7 0 -9 25 -4 74 l7 74 -31 16 c-17 9 -37 13 -46 10 -16 -6 -19 5 -61 251 -15 83 -29 161 -32 174 -5 20 -3 23 13 19 10 -3 75 -22 144 -42z m-127 -453 c3 -10 8 -35 12 -57 3 -21 14 -53 22 -72 18 -36 13 -54 -27 -104 -11 -14 -24 -45 -28 -70 l-7 -44 -22 37 c-19 32 -27 37 -58 37 -41 0 -42 2 -14 46 23 37 34 41 63 19 28 -21 35 -19 51 18 14 33 10 76 -15 157 -13 45 -13 50 4 50 8 0 17 -8 19 -17z"/><path fill={this.props.hexCode} d="M1523 2709 c-73 -12 -161 -50 -241 -103 -90 -60 -144 -106 -117 -100 25 5 649 104 658 104 17 0 5 31 -17 45 -67 44 -193 68 -283 54z"/><path fill={this.props.hexCode} d="M1563 2516 c-111 -28 -251 -122 -223 -150 7 -7 37 3 98 36 48 25 99 48 115 52 27 6 27 6 27 -44 0 -27 3 -50 8 -50 4 0 39 9 79 19 l72 19 -6 -29 c-5 -27 -3 -29 26 -29 46 0 68 15 92 62 l21 41 -23 19 c-67 51 -199 76 -286 54z"/><path fill={this.props.hexCode} d="M2900 2258 c-18 -13 -40 -34 -48 -46 l-16 -24 106 4 c59 1 109 6 113 10 13 12 -17 50 -50 64 -47 19 -67 18 -105 -8z"/></g></svg> */}
          {!this.props.isLocked && <button className='lock' onClick={() => this.props.toggleLock(this.props.id)}>Unlocked</button>}

          {this.props.isLocked && <button className='lock' onClick={() => this.props.toggleLock(this.props.id)}>Locked</button>}
          <h3>Hex Code:{this.props.hexCode}</h3>
      </div>
    )
  }
}

export default Color;